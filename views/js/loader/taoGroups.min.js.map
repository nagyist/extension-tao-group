{"version":3,"mappings":"AAqBAA,mDACA,aAEA,QAEA,CALA,C,CCDAA,mJACA,aAQA,uCAKA,OAYAC,WAZA,sBAYAC,MAZA,CAYA,CAEA,eACAC,sEADA,CAEAC,oDAFA,CAGAC,eAHA,EAQA,MAFAH,wCAEA,sCACAI,aACAC,qDADA,CAEAC,aAFA,CAGAC,WAHA,CAIAC,eAJA,GAMAC,IANA,CAMA,gBACAC,cACA,CARA,EASAC,KATA,CASA,WACAC,mDACA,CAXA,CAYA,CAbA,CAcA,CApCA,CA4CAC,WA5CA,sBA4CAC,GA5CA,CA4CA,CAEA,kDAEA,gCAFA,CAGAF,mDAHA,KAMAR,cACAC,gDADA,CAEAC,aAFA,CAGAC,cAHA,CAIAC,eAJA,GAMAC,IANA,CAMA,mBACAC,iBACA,CARA,EASAC,KATA,CASA,WACAC,+CACA,CAXA,CAYA,CAlBA,CAmBA,CAjEA,CAmEA,CACA,CAlFA,C,CCnBAd,wD","names":["define","addInstance","config","classUri","id","type","coreRequest","url","method","data","dataType","then","resolve","catch","reject","deleteGroup","uri"],"sources":["../controller/routes.js","../provider/group.js","module-create.js"],"sourcesContent":["/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n * \n * \n */\n\n//@see http://forge.taotesting.com/projects/tao/wiki/Front_js\ndefine('taoGroups/controller/routes',[],function(){\n    'use strict';\n\n    return {\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017-2019  (original work) Open Assessment Technologies SA;\n *\n * @author Alexander Zagovorichev <zagovorichev@1pt.com>\n */\n\ndefine('taoGroups/provider/group',['jquery', 'lodash', 'i18n', 'util/url', 'core/promise', 'core/request'], function ($, _, __, urlUtil, Promise, coreRequest) {\n    'use strict';\n\n    /**\n     * Creates a group provider\n     *\n     * @typedef {Object} groupProvider\n     * @type {{addInstance: groupProvider.addInstance}}\n     */\n    return function groupProviderFactory () {\n\n        /**\n         * @returns {groupProvider}\n         */\n        return {\n\n            /**\n             * Create new group\n             *\n             * @param config\n             * @param {String} [config.classUri] - rdf uri of the Group for current environment\n             * @param {String} [config.id] - id of the Group for current environment\n             * @param {String} [config.signature] - id signature received from BE, required\n             * @param {String} [config.type] - Type of the instance\n             * @return {*}\n             */\n            addInstance (config) {\n\n                const _defaults = {\n                    classUri: 'http_2_www_0_tao_0_lu_1_Ontologies_1_TAOGroup_0_rdf_3_Group',\n                    id: 'http://www.tao.lu/Ontologies/TAOGroup.rdf#Group',\n                    type: 'instance'\n                };\n\n                config = _.defaults(config || {}, _defaults);\n\n                return new Promise((resolve, reject) => {\n                        coreRequest({\n                            url: urlUtil.route('addInstance', 'Groups', 'taoGroups'),\n                            method: 'POST',\n                            data: config,\n                            dataType: 'json',\n                        })\n                        .then(function (group) {\n                            resolve(group);\n                        })\n                        .catch(function () {\n                            reject(new Error(__('Unable to create new group')));\n                        });\n                });\n            },\n\n            /**\n             * Group deleting\n             *\n             * @param uri\n             * @return {*}\n             */\n            deleteGroup (uri) {\n\n                return new Promise((resolve, reject) => {\n\n                    if (!_.isString(uri) || _.isEmpty(uri)) {\n                        return reject(new TypeError(__('Group uri is not valid')));\n                    }\n\n                    coreRequest({\n                        url: urlUtil.route('delete', 'Groups', 'taoGroups'),\n                        method: 'POST',\n                        data: {uri: uri},\n                        dataType: 'json',\n                    })\n                    .then(function (response) {\n                        resolve(response);\n                    })\n                    .catch(function () {\n                        reject(new Error(__('Unable to delete group')));\n                    });\n                });\n            }\n        };\n    };\n});\n\n","\ndefine(\"taoGroups/loader/taoGroups.bundle\", function(){});\n"]}